// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id           String     @id @default(uuid())
  clerkId      String     @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  journals Journal[]
}


model Spot {
  id String @id @default(uuid())
  name String
  latitude Decimal @db.Decimal(10,8)
  longitude Decimal @db.Decimal(10,8)
  camLink String 
  instruction String
  hazards String
  boards String
  floor String
  seasonal String
  winds String
  swell String
  height String
  tide String
  Journal Journal[]
}

model Journal {
  id String @id @default(uuid())
  entry String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessionStart DateTime
  sessionLength Int
  rating Decimal @db.Decimal(2,1)
  boardType String
  highlights String
  heightRating Decimal @db.Decimal(2,1)
  fatigueRating Decimal @db.Decimal(2,1)
  finSetup String
  boardLength Int
  boardLiters Decimal
  swimwear String
  profile     Profile    @relation(fields: [profileID], references: [clerkId], onDelete: Cascade)
  profileID String
  spot Spot @relation(fields: [spotID], references: [id])
  spotID String
}